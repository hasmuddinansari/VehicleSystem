{"ast":null,"code":"const initialState = {\n  data: []\n};\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_VEHICLE\":\n      return {\n        data: [...state.data, action.payload]\n      };\n\n    case \"DELETE\":\n      const newData = state.data.filter(veh => {\n        return veh.id != action.id;\n      });\n      return {\n        data: newData\n      };\n\n    case \"SORT\":\n      {\n        if (action.typeSort == \"asc\") {\n          let data = action.data;\n          console.log(action.typeSort);\n          let sortedData = data.sort((a, b) => {\n            if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;else if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n            return 0;\n          });\n          return {\n            data: sortedData\n          };\n        } else if (action.typeSort == \"desc\") {\n          let data = action.data;\n          let sortedData = data.sort((a, b) => {\n            if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;else if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n            return 0;\n          });\n          return {\n            data: sortedData\n          };\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;","map":{"version":3,"sources":["/home/ayaan/coding/week_12/src/components/common/Redux/Reducer.js"],"names":["initialState","data","Reducer","state","action","type","payload","newData","filter","veh","id","typeSort","console","log","sortedData","sort","a","b","name","toLowerCase"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLJ,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACE,OAAvB;AADD,OAAP;;AAGF,SAAK,QAAL;AACE,YAAMC,OAAO,GAAGJ,KAAK,CAACF,IAAN,CAAWO,MAAX,CAAkBC,GAAG,IAAI;AACvC,eAAOA,GAAG,CAACC,EAAJ,IAAUN,MAAM,CAACM,EAAxB;AACD,OAFe,CAAhB;AAGA,aAAO;AACLT,QAAAA,IAAI,EAAEM;AADD,OAAP;;AAIF,SAAK,MAAL;AAAa;AACX,YAAIH,MAAM,CAACO,QAAP,IAAmB,KAAvB,EAA8B;AAC5B,cAAIV,IAAI,GAAGG,MAAM,CAACH,IAAlB;AACAW,UAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACO,QAAnB;AACA,cAAIG,UAAU,GAAGb,IAAI,CAACc,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnC,gBAAID,CAAC,CAACE,IAAF,CAAOC,WAAP,KAAuBF,CAAC,CAACC,IAAF,CAAOC,WAAP,EAA3B,EAAiD,OAAO,CAAP,CAAjD,KACK,IAAIH,CAAC,CAACE,IAAF,CAAOC,WAAP,KAAuBF,CAAC,CAACC,IAAF,CAAOC,WAAP,EAA3B,EAAiD,OAAO,CAAC,CAAR;AACtD,mBAAO,CAAP;AACD,WAJgB,CAAjB;AAKA,iBAAO;AACLlB,YAAAA,IAAI,EAAEa;AADD,WAAP;AAGD,SAXD,MAWO,IAAIV,MAAM,CAACO,QAAP,IAAmB,MAAvB,EAA+B;AACpC,cAAIV,IAAI,GAAGG,MAAM,CAACH,IAAlB;AACA,cAAIa,UAAU,GAAGb,IAAI,CAACc,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnC,gBAAID,CAAC,CAACE,IAAF,CAAOC,WAAP,KAAuBF,CAAC,CAACC,IAAF,CAAOC,WAAP,EAA3B,EAAiD,OAAO,CAAP,CAAjD,KACK,IAAIH,CAAC,CAACE,IAAF,CAAOC,WAAP,KAAuBF,CAAC,CAACC,IAAF,CAAOC,WAAP,EAA3B,EAAiD,OAAO,CAAC,CAAR;AACtD,mBAAO,CAAP;AACD,WAJgB,CAAjB;AAKA,iBAAO;AACLlB,YAAAA,IAAI,EAAEa;AADD,WAAP;AAGD;AACF;;AAED;AACE,aAAOX,KAAP;AAvCJ;AAyCD,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  data: []\n};\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_VEHICLE\":\n      return {\n        data: [...state.data, action.payload]\n      };\n    case \"DELETE\":\n      const newData = state.data.filter(veh => {\n        return veh.id != action.id;\n      });\n      return {\n        data: newData\n      };\n\n    case \"SORT\": {\n      if (action.typeSort == \"asc\") {\n        let data = action.data;\n        console.log(action.typeSort);\n        let sortedData = data.sort((a, b) => {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          else if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          return 0;\n        });\n        return {\n          data: sortedData\n        };\n      } else if (action.typeSort == \"desc\") {\n        let data = action.data;\n        let sortedData = data.sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n          else if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n          return 0;\n        });\n        return {\n          data: sortedData\n        };\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n"]},"metadata":{},"sourceType":"module"}