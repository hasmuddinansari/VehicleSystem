{"ast":null,"code":"import _toConsumableArray from\"/home/ayaan/coding/week_12/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var initialState={data:[]};var Reducer=function Reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_VEHICLE\":return{data:[].concat(_toConsumableArray(state.data),[action.payload])};case\"DELETE\":var newData=state.data.filter(function(veh){return veh.id!=action.id;});return{data:newData};case\"SORT\":{if(action.typeSort==\"asc\"){var data=action.data;var sortedData=data.sort(function(a,b){if(a.model_name.toLowerCase()>b.model_name.toLowerCase())return 1;else if(a.model_name.toLowerCase()<b.model_name.toLowerCase())return-1;return 0;});return{data:sortedData};}else if(action.typeSort==\"desc\"){var _data=action.data;var _sortedData=_data.sort(function(a,b){if(a.model_name.toLowerCase()<b.model_name.toLowerCase())return 1;else if(a.model_name.toLowerCase()>b.model_name.toLowerCase())return-1;return 0;});return{data:_sortedData};}}case\"UPDATE\":var newUpdatedData=state.data.filter(function(oldVehicle){return oldVehicle.id!=action.id;});return{data:[].concat(_toConsumableArray(newUpdatedData),[action.newVehicle])};default:return state;}};export default Reducer;","map":{"version":3,"sources":["/home/ayaan/coding/week_12/src/components/common/Redux/Reducer.js"],"names":["initialState","data","Reducer","state","action","type","payload","newData","filter","veh","id","typeSort","sortedData","sort","a","b","model_name","toLowerCase","newUpdatedData","oldVehicle","newVehicle"],"mappings":"qHAAA,GAAMA,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAArB,CAIA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,aAAL,CACE,MAAO,CACLJ,IAAI,8BAAME,KAAK,CAACF,IAAZ,GAAkBG,MAAM,CAACE,OAAzB,EADC,CAAP,CAGF,IAAK,QAAL,CACE,GAAMC,CAAAA,OAAO,CAAGJ,KAAK,CAACF,IAAN,CAAWO,MAAX,CAAkB,SAAAC,GAAG,CAAI,CACvC,MAAOA,CAAAA,GAAG,CAACC,EAAJ,EAAUN,MAAM,CAACM,EAAxB,CACD,CAFe,CAAhB,CAGA,MAAO,CACLT,IAAI,CAAEM,OADD,CAAP,CAIF,IAAK,MAAL,CAAa,CACX,GAAIH,MAAM,CAACO,QAAP,EAAmB,KAAvB,CAA8B,CAC5B,GAAIV,CAAAA,IAAI,CAAGG,MAAM,CAACH,IAAlB,CACA,GAAIW,CAAAA,UAAU,CAAGX,IAAI,CAACY,IAAL,CAAU,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACnC,GAAID,CAAC,CAACE,UAAF,CAAaC,WAAb,GAA6BF,CAAC,CAACC,UAAF,CAAaC,WAAb,EAAjC,CAA6D,MAAO,EAAP,CAA7D,IACK,IAAIH,CAAC,CAACE,UAAF,CAAaC,WAAb,GAA6BF,CAAC,CAACC,UAAF,CAAaC,WAAb,EAAjC,CACH,MAAO,CAAC,CAAR,CACF,MAAO,EAAP,CACD,CALgB,CAAjB,CAMA,MAAO,CACLhB,IAAI,CAAEW,UADD,CAAP,CAGD,CAXD,IAWO,IAAIR,MAAM,CAACO,QAAP,EAAmB,MAAvB,CAA+B,CACpC,GAAIV,CAAAA,KAAI,CAAGG,MAAM,CAACH,IAAlB,CACA,GAAIW,CAAAA,WAAU,CAAGX,KAAI,CAACY,IAAL,CAAU,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACnC,GAAID,CAAC,CAACE,UAAF,CAAaC,WAAb,GAA6BF,CAAC,CAACC,UAAF,CAAaC,WAAb,EAAjC,CAA6D,MAAO,EAAP,CAA7D,IACK,IAAIH,CAAC,CAACE,UAAF,CAAaC,WAAb,GAA6BF,CAAC,CAACC,UAAF,CAAaC,WAAb,EAAjC,CACH,MAAO,CAAC,CAAR,CACF,MAAO,EAAP,CACD,CALgB,CAAjB,CAMA,MAAO,CACLhB,IAAI,CAAEW,WADD,CAAP,CAGD,CACF,CAED,IAAK,QAAL,CACE,GAAMM,CAAAA,cAAc,CAAGf,KAAK,CAACF,IAAN,CAAWO,MAAX,CAAkB,SAAAW,UAAU,CAAI,CACrD,MAAOA,CAAAA,UAAU,CAACT,EAAX,EAAiBN,MAAM,CAACM,EAA/B,CACD,CAFsB,CAAvB,CAGA,MAAO,CACLT,IAAI,8BAAMiB,cAAN,GAAsBd,MAAM,CAACgB,UAA7B,EADC,CAAP,CAIF,QACE,MAAOjB,CAAAA,KAAP,CAhDJ,CAkDD,CAnDD,CAqDA,cAAeD,CAAAA,OAAf","sourcesContent":["const initialState = {\n  data: []\n};\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_VEHICLE\":\n      return {\n        data: [...state.data, action.payload]\n      };\n    case \"DELETE\":\n      const newData = state.data.filter(veh => {\n        return veh.id != action.id;\n      });\n      return {\n        data: newData\n      };\n\n    case \"SORT\": {\n      if (action.typeSort == \"asc\") {\n        let data = action.data;\n        let sortedData = data.sort((a, b) => {\n          if (a.model_name.toLowerCase() > b.model_name.toLowerCase()) return 1;\n          else if (a.model_name.toLowerCase() < b.model_name.toLowerCase())\n            return -1;\n          return 0;\n        });\n        return {\n          data: sortedData\n        };\n      } else if (action.typeSort == \"desc\") {\n        let data = action.data;\n        let sortedData = data.sort((a, b) => {\n          if (a.model_name.toLowerCase() < b.model_name.toLowerCase()) return 1;\n          else if (a.model_name.toLowerCase() > b.model_name.toLowerCase())\n            return -1;\n          return 0;\n        });\n        return {\n          data: sortedData\n        };\n      }\n    }\n\n    case \"UPDATE\":\n      const newUpdatedData = state.data.filter(oldVehicle => {\n        return oldVehicle.id != action.id;\n      });\n      return {\n        data: [...newUpdatedData, action.newVehicle]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n"]},"metadata":{},"sourceType":"module"}